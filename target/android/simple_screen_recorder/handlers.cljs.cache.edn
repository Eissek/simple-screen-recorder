;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name simple-screen-recorder.handlers, :imports nil, :requires {re-frame.core re-frame.core, s schema.core, schema.core schema.core, simple-screen-recorder.db simple-screen-recorder.db}, :uses {app-db simple-screen-recorder.db, schema simple-screen-recorder.db, after re-frame.core, register-handler re-frame.core}, :defs {check-and-throw {:protocol-inline nil, :meta {:file "/home/eissek87/Clojurescript/simple-screen-recorder/src/simple_screen_recorder/handlers.cljs", :line 11, :column 7, :end-line 11, :end-column 22, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, :name simple-screen-recorder.handlers/check-and-throw, :variadic false, :file "src/simple_screen_recorder/handlers.cljs", :end-column 22, :method-params ([a-schema db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a-schema db])), :doc "throw an exception if db doesn't match the schema."}, validate-schema-mw {:name simple-screen-recorder.handlers/validate-schema-mw, :file "src/simple_screen_recorder/handlers.cljs", :line 17, :column 1, :end-line 17, :end-column 24, :meta {:file "/home/eissek87/Clojurescript/simple-screen-recorder/src/simple_screen_recorder/handlers.cljs", :line 17, :column 6, :end-line 17, :end-column 24}}}, :require-macros {s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:initialize-db :set-greeting :greeting}, :order [:initialize-db :set-greeting :greeting]}, :doc nil}